JSON SIMPLE PARSER 설명
https://dololak.tistory.com/625

프리미어 리그 데이터 관련 API (espn)
Scores: http://site.api.espn.com/apis/site/v2/sports/soccer/:league/scoreboard
http://site.api.espn.com/apis/site/v2/sports/soccer/eng.1/scoreboard
(param: eng.1)

Latest News: http://site.api.espn.com/apis/site/v2/sports/soccer/:league/news
http://site.api.espn.com/apis/site/v2/sports/soccer/eng.1/news
(param: eng.1)

List of Team Information: http://site.api.espn.com/apis/site/v2/sports/soccer/:league/teams
http://site.api.espn.com/apis/site/v2/sports/soccer/eng.1/teams
(param: eng.1)

https://www.espn.com/apis/devcenter/io-docs.html
api document

https://www.kryogenix.org/code/browser/sorttable/
sort table JS 라이브러리

할것: 소스코드 정리 및 간단한 경기내용 추가

// 경기 ID
events -> competitions -> venue -> fullName -> // 경기장
events -> competitions -> competitors -> statistics -> [1] foulsCommitted // 파울
events -> competitions -> competitors -> statistics -> [2] wonCorners // 코너킥
events -> competitions -> competitors -> statistics -> [4] possessionPct // 점유율
events -> competitions -> competitors -> statistics -> [6] shotsOnTarget // 유효슈팅
events -> competitions -> competitors -> statistics -> [7] totalGoals // 골넣은 횟수(점수)
events -> competitions -> competitors -> statistics -> [8] totalShots // 슈팅

ING
곧 시작할 경기들(베팅관련)
http://site.api.espn.com/apis/site/v2/sports/soccer/eng.1/scoreboard

simple description
events(A){ 
	id uid(unique id) date name shortname // 경기일정 팀이름 유니크id 등
	competitions(A) { // 참여하는팀 부가 설명
		competitors(A) {
			id // 참여한 경기의 id(위의 id랑같음)
			uid // 해당 팀 unique id
			winner // 이겼는지 졌는지 bool
			score // 팀 스코어
			team // 해당 팀 설명 내용많음
			statistics(A) // 해당 경기 stat 기록
		}
	}
	status {
		type {
			completed // 경기가 끝낫는지 안끝낫는지
		}
	}
}
(A) = array

DB
events // T
id uid date name shortname completed // C

T = table
c = column

//RECENT MATCH
CREATE TABLE rmatch (
pkid INT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
id INT UNSIGNED NOT NULL,
date VARCHAR(100) NOT NULL,
venue VARCHAR(50) NOT NULL,
lteam VARCHAR(100) NOT NULL,
lid INT UNSIGNED NOT NULL,
lscore INT UNSIGNED NOT NULL,
lfoulsCommitted INT UNSIGNED NOT NULL,
lwonCorners INT UNSIGNED NOT NULL,
lpossessionPct DOUBLE UNSIGNED NOT NULL,
lshotsontarget INT UNSIGNED NOT NULL,
ltotalgoals INT UNSIGNED NOT NULL,
ltotalshots INT UNSIGNED NOT NULL,
rteam VARCHAR(100) NOT NULL,
rid INT UNSIGNED NOT NULL,
rscore INT UNSIGNED NOT NULL,
rfoulsCommitted INT UNSIGNED NOT NULL,
rwonCorners INT UNSIGNED NOT NULL,
rpossessionPct DOUBLE UNSIGNED NOT NULL,
rshotsontarget INT UNSIGNED NOT NULL,
rtotalgoals INT UNSIGNED NOT NULL,
rtotalshots INT UNSIGNED NOT NULL,
completed boolean NULL
);


//TEAMS create 쿼리문
CREATE TABLE teams (
pkid INT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY,
id INT UNSIGNED NOT NULL,
name VARCHAR(50) NOT NULL,
wins DOUBLE NOT NULL,
losses DOUBLE NOT NULL,
ties DOUBLE NOT NULL,
gamesPlayed DOUBLE NOT NULL,
pointsFor DOUBLE NOT NULL,
pointsAgainst DOUBLE NOT NULL,
points DOUBLE NOT NULL,
streak DOUBLE NOT NULL,
rankChange DOUBLE NOT NULL,
rank DOUBLE NOT NULL,
pointDifferential DOUBLE NOT NULL,
homePointsFor DOUBLE NOT NULL,
homePointsAgainst DOUBLE NOT NULL,
homeLosses DOUBLE NOT NULL,
homeWins DOUBLE NOT NULL,
homeTies DOUBLE NOT NULL,
homeGamesPlayed DOUBLE NOT NULL,
awayPointsFor DOUBLE NOT NULL,
awayPointsAgainst DOUBLE NOT NULL,
awayLosses DOUBLE NOT NULL,
awayWins DOUBLE NOT NULL,
awayTies DOUBLE NOT NULL,
awayGamesPlayed DOUBLE NOT NULL,
deductions DOUBLE NOT NULL,
ppg DOUBLE NOT NULL);

// 로그인 CREATE TABLE 쿼리문
CREATE TABLE pgrUser(
	userPk INT UNSIGNED AUTO_INCREMENT,
	userEmail VARCHAR(1000) NOT NULL UNIQUE,
	userPw VARCHAR(1000) NOT NULL,
	nickname VARCHAR(1000) NOT NULL,
	regDt DATETIME DEFAULT NOW(),
	myProperty INT unsigned DEFAULT 10000 NOT null,
	PRIMARY KEY (userPk)
);
